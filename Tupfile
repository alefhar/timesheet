EXTERNAL_INCLUDE = external/include
EXTERNAL_SRC_DIR = external/src
EXTERNAL_LIB_DIR = external/lib

NAMESPACE  = ar
COMMON_DIR = common
GUI_DIR    = gui

INCLUDE_DIR        = include
COMMON_INCLUDE_DIR = $(INCLUDE_DIR)/$(COMMON_DIR)
GUI_INCLUDE_DIR    = $(INCLUDE_DIR)/$(GUI_DIR)

SRC_DIR        = src
COMMON_SRC_DIR = $(SRC_DIR)/$(COMMON_DIR)
GUI_SRC_DIR    = $(SRC_DIR)/$(GUI_DIR)

BUILD_DIR        = build
COMMON_BUILD_DIR = $(BUILD_DIR)/$(COMMON_DIR)
GUI_BUILD_DIR    = $(BUILD_DIR)/$(GUI_DIR)

CC          = g++
INCLUDES    = -I$(COMMON_INCLUDE_DIR) -I$(GUI_INCLUDE_DIR) -I$(EXTERNAL_INCLUDE)
QT_INCLUDES = -I/usr/include/qt5 -I/usr/lib64/qt5/mkspecs/linux-g++-64
CCFLAGS     = -std=c++14 -O3 -g -Wall -Wextra -pedantic -fPIC $(INCLUDES) $(QT_INCLUDES)
LIBS        = -L$(EXTERNAL_LIB_DIR) -L/usr/local/lib
QT_LIBS     = -lQt5Core -lQt5Gui -lQt5Widgets
LDFLAGS     = $(LIBS) -L/usr/lib64 $(QT_LIBS)

TARGET = timesheet

: submodules/qtimespan/qtimespan.h patches/qtimespan.h.patch |> patch -u %f -o %o |> $(EXTERNAL_INCLUDE)/qtimespan.h

: submodules/qtimespan/qtimespan.cpp patches/qtimespan.cpp.patch |> patch -u %f -o %o |> $(EXTERNAL_SRC_DIR)/qtimespan.cpp

: foreach $(EXTERNAL_SRC_DIR)/*.cpp | $(EXTERNAL_INCLUDE)/qtimespan.h $(EXTERNAL_SRC_DIR)/qtimespan.cpp |> $(CC) $(CCFLAGS) -I/usr/include/qt5/QtCore -c -o %o %f |> $(BUILD_DIR)/%B.o {ext_obj}

: foreach $(COMMON_SRC_DIR)/*.cpp | $(EXTERNAL_INCLUDE)/qtimespan.h |> $(CC) $(CCFLAGS) -c -o %o %f |> $(BUILD_DIR)/%B.o {common_obj}

: foreach $(GUI_INCLUDE_DIR)/$(NAMESPACE)/*.hpp |> moc-qt5 -p ar -o %o %f |> $(GUI_SRC_DIR)/moc_%B.cpp {moc}

: foreach $(GUI_SRC_DIR)/*.cpp | {moc} |> $(CC) $(CCFLAGS) -c -o %o %f |> $(BUILD_DIR)/%B.o {gui_obj}

: {gui_obj} {ext_obj} {common_obj} |> $(CC) $(CCFLAGS) -o %o %f $(LDFLAGS) |> $(TARGET)

#: foreach $(TEST_SRC_DIR)/*.cpp |> $(CC) $(CCFLAGS) -c -o %o %f  |> $(TEST_BUILD_DIR)/%B.o {test_obj}

#: {test_obj} {shared_obj} |> $(CC) $(CCFLAGS) -o %o %f -lgtest $(LDFLAGS) |> run_tests

.gitignore
